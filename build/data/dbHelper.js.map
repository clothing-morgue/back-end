{"version":3,"sources":["../../src/data/dbHelper.js"],"names":["module","exports","find","findById","add","id","where","first","user","returning","insert","addedUser"],"mappings":";;AACA;;;;;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,IAAI,EAAJA,IADe;AAEfC,EAAAA,QAAQ,EAARA,QAFe;AAGfC,EAAAA,GAAG,EAAHA;AAHe,CAAjB,C,CAMA;;AACA,SAASF,IAAT,GAAgB;AACd,SAAO,0BAAG,OAAH,CAAP;AACD,C,CACD;AACA;AAEA;AACA;AACA;AAEA;;;AAEA,SAASC,QAAT,CAAkBE,EAAlB,EAAsB;AACpB,SAAO,0BAAG,OAAH,EACJC,KADI,CACE;AAAED,IAAAA,EAAE,EAAFA;AAAF,GADF,EAEJE,KAFI,EAAP;AAGD,C,CAED;;;SAEeH,G;;;;;;;0BAAf,iBAAmBI,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwB,0BAAG,OAAH,EAAYC,SAAZ,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCF,IAAnC,CADxB;;AAAA;AACMG,YAAAA,SADN;AAAA,6CAESR,QAAQ,CAACQ,SAAS,CAAC,CAAD,CAAV,CAFjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["//require('dotenv').config();\r\nimport db from \"./dbConfig\";\r\n\r\nmodule.exports = {\r\n  find,\r\n  findById,\r\n  add\r\n};\r\n\r\n// this is the equivalent of db.select('*').from('users')\r\nfunction find() {\r\n  return db(\"users\");\r\n}\r\n// This example resolves to an array containing a single user\r\n// (or an empty array)\r\n\r\n// function findById(id) {\r\n//   return db('users').where({ id });\r\n// };\r\n\r\n// This version resolves to a single user (or null)\r\n\r\nfunction findById(id) {\r\n  return db(\"users\")\r\n    .where({ id })\r\n    .first();\r\n}\r\n\r\n// An alternate way to write that would be db('users').where({ id: 3 });\r\n\r\nasync function add(user) {\r\n  let addedUser = await db('users').returning('id').insert(user);\r\n  return findById(addedUser[0]);\r\n}\r\n"],"file":"dbHelper.js"}